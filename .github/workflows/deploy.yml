name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
  S3_BUCKET_TFSTATE: ${{ secrets.TFSTATE_BUCKET_NAME }} # S3バケット名に合わせて変更
  DYNAMODB_TABLE_TFLOCK: ${{ secrets.TFLOCK_TABLE_NAME }} # DynamoDBテーブル名に合わせて変更

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push frontend image
      env:
        ECR_REPOSITORY: local-to-rtmp-pusher-frontend
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./frontend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Build, tag, and push backend image
      env:
        ECR_REPOSITORY: local-to-rtmp-pusher-backend
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./backend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Build, tag, and push rtmp-server image
      env:
        ECR_REPOSITORY: local-to-rtmp-pusher-rtmp-server
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./rtmp-server
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.x # 使用するTerraformのバージョンに合わせて変更

    - name: Terraform Init
      run: terraform init -backend-config="bucket=${{ env.S3_BUCKET_TFSTATE }}" -backend-config="dynamodb_table=${{ env.DYNAMODB_TABLE_TFLOCK }}" -backend-config="region=${{ env.AWS_REGION }}"
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform